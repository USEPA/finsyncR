filter(IS_DISTINCT == 1) %>%
filter(NOTFISH == "") %>%
select(UID:VISIT_NO, DATE_COL, ELECTROFISH:METHOD, FISH_PROTOCOL, FAMILY:SCIENTIFIC, FINAL_NAME, FINAL_CT) %>%
mutate(DATE_COL = as.Date(DATE_COL, "%d-%B-%y"))})
##2013/2014
suppressMessages({NRSA_1314 <- NRSA_1314_fishcnt %>%
dplyr::left_join(NRSA_1314_fishtax %>%
dplyr::filter(FINAL_NAME %in%
unique(NRSA_1314_fishcnt$FINAL_NAME)) %>%
dplyr::mutate(across(c(FAMILY, GENUS),
~ stringr::str_to_sentence(.x))) %>%
dplyr::mutate(SPECIES = stringr::str_to_lower(SPECIES)) %>%
tidyr::unite("SCIENTIFIC",
c(GENUS, SPECIES),
remove = F,
sep = " ") %>%
dplyr::select(FAMILY, GENUS, SPECIES,
SCIENTIFIC, FINAL_NAME)
) %>%
filter(!FAMILY %in% c("Ranidae", "Dicamptodontidae", "Salamandridae",
"Pipidae", "Bufonidae", "Hylidae", "Rhyacotritonidae",
"Ambystomatidae", "Leiopelmatidae")) %>%
filter(IS_DISTINCT == 1) %>%
dplyr::select(UID, SITE_ID:LON_DD83, FAMILY:SCIENTIFIC, FINAL_NAME, TOTAL)%>%
mutate(DATE_COL = as.Date(DATE_COL, "%m/%d/%Y"))})
##2018/2019
suppressMessages({NRSA_1819 <- NRSA_1819_fishcnt %>%
dplyr::left_join(NRSA_1314_fishtax %>%
dplyr::filter(FINAL_NAME %in%
unique(NRSA_1819_fishcnt$FINAL_NAME)) %>%
dplyr::mutate(across(c(FAMILY, GENUS),
~ stringr::str_to_sentence(.x))) %>%
dplyr::mutate(SPECIES = stringr::str_to_lower(SPECIES)) %>%
tidyr::unite("SCIENTIFIC",
c(GENUS, SPECIES),
remove = F,
sep = " ") %>%
dplyr::select(FAMILY, GENUS, SPECIES,
SCIENTIFIC, FINAL_NAME)
) %>%
filter(!FAMILY %in% c("Ranidae", "Dicamptodontidae", "Salamandridae",
"Pipidae", "Bufonidae", "Hylidae", "Rhyacotritonidae",
"Ambystomatidae", "Leiopelmatidae")) %>%
filter(IS_DISTINCT == 1) %>%
dplyr::select(UID, SITE_ID:VISIT_NO, STATE, FAMILY:SCIENTIFIC, FINAL_NAME, TOTAL)%>%
mutate(DATE_COL = as.Date(DATE_COL, "%m/%d/%Y"))})
NRSA_FISH <- dplyr::bind_rows(NRSA_0809, NRSA_1314, NRSA_1819)
NRSA_FISH <- NRSA_FISH %>%
mutate(TOTAL = ifelse(is.na(TOTAL),
FINAL_CT,
TOTAL)) %>%
dplyr::select(-FINAL_CT,-STATE,-SITE_ID, -PSTL_CODE, -LAT_DD83, -LON_DD83)
###Need to link the site-level information with the taxa-level info;
#start w/ 08/09
##Need UID, SITE_ID, DATE_COL, VISIT_NO, STATE, LOC_NAME, LAT_DD, LON_DD, MASTER_SITEID
NRSA_0809_s <- NRSA_0809_sites %>%
dplyr::select(UID, SITE_ID, MASTER_SITEID, DATE_COL, VISIT_NO, STATE, LOC_NAME, LAT_DD83, LON_DD83) %>%
mutate(DATE_COL = as.Date(DATE_COL, "%d-%B-%y"))
NRSA_1314_s <- NRSA_1314_sites %>%
dplyr::select(UID, SITE_ID, DATE_COL, VISIT_NO, BOAT_WADE, NARS_NAME, LAT_DD83, LON_DD83) %>%
mutate(DATE_COL = as.Date(DATE_COL, "%m/%d/%Y"))
NRSA_1819_s <- NRSA_1819_sites %>%
dplyr::select(UID, SITE_ID, DATE_COL, VISIT_NO, UNIQUE_ID, NARS_NAME, LAT_DD83, LON_DD83) %>%
mutate(VISIT_NO = as.numeric(ifelse(VISIT_NO == "R",
2,
VISIT_NO)))%>%
mutate(DATE_COL = as.Date(DATE_COL, "%m/%d/%Y"))
NRSA_fish_sites <- bind_rows(NRSA_0809_s, NRSA_1314_s, NRSA_1819_s) %>%
relocate(UNIQUE_ID, .after = SITE_ID) %>%
mutate(SITENAME = ifelse(is.na(LOC_NAME),
NARS_NAME,
LOC_NAME)) %>%
dplyr::select(-c(LOC_NAME, NARS_NAME)) %>%
relocate(SITENAME, .after = VISIT_NO)
##MASTER ID LIST
NRSA_fish_sites$UNIQUE_ID <- ifelse(NRSA_fish_sites$SITE_ID %in% StreamData:::.NRSA_siteIDs$SITE_ID,
StreamData:::.NRSA_siteIDs$UNIQUE_ID[match(NRSA_fish_sites$SITE_ID,
StreamData:::.NRSA_siteIDs$SITE_ID)],
NA)
##if site number in nrsa_comms1 is in the MASTER_SITEID in the master crosswalk list,
##match the numbers and pull the corresponding unique id, which is the crosswalked site id,
##else give the current UNIQUE ID
NRSA_fish_sites$UNIQUE_ID <- ifelse(NRSA_fish_sites$SITE_ID %in% StreamData:::.NRSA_siteIDs$MASTER_SITEID,
StreamData:::.NRSA_siteIDs$UNIQUE_ID[match(NRSA_fish_sites$SITE_ID,
StreamData:::.NRSA_siteIDs$MASTER_SITEID)],
NRSA_fish_sites$UNIQUE_ID)
##if there are any NA values in UNIQUE ID, replace these with the SiteNumber
NRSA_fish_sites$SITE_ID = ifelse(is.na(NRSA_fish_sites$UNIQUE_ID),
NRSA_fish_sites$SITE_ID,
NRSA_fish_sites$UNIQUE_ID)
##remove the UNIQUEID column, as it is no longer needed
NRSA_fish_sites <- NRSA_fish_sites %>%
select(-UNIQUE_ID, -MASTER_SITEID)
##Join fish_sites w/ sampling information prior to joining with fish assemblage data
##Error here; difference in codes. UID should be character, no?
NRSA_fish_info <- NRSA_fish_sites %>%
dplyr::left_join(NRSA_fish_sampleinfo %>%
filter(UID %in% NRSA_fish_sites$UID) %>%
dplyr::select(-PRIM_FSHTIME, -SAMPLED_FISH), by = "UID")
##Join NRSA_fish_sites with actual data
NRSA_FISH_wSite <- NRSA_FISH %>%
dplyr::select(-FISH_PROTOCOL) %>%
left_join(NRSA_fish_info %>%
group_by(UID, SITE_ID, DATE_COL, VISIT_NO) %>%
slice(1) %>%
ungroup() %>%
dplyr::select(-DATE_COL, -VISIT_NO),
by = "UID") %>%
mutate(FISH_PROTOCOL = ifelse(FISH_PROTOCOL == "",
BOAT_WADE,
FISH_PROTOCOL),
FISH_PROTOCOL = ifelse(grepl("NONW", FISH_PROTOCOL),
"BOATABLE",
ifelse(FISH_PROTOCOL == "BOATABLE",
"BOATABLE",
"WADEABLE")),
StandardMethod = ifelse(MethodBasic == "Seine",
NumberSeineHauls,
MinutesShockTime)) %>%
dplyr::select(-BOAT_WADE)
NRSA_FISH_comm <- NRSA_FISH_wSite %>%
filter(!is.na(GENUS) & GENUS != "") %>%
filter(!is.na(SPECIES) & SPECIES != "") %>%
filter(!grepl(" or ", SCIENTIFIC)) %>%
dplyr::select(-FAMILY, -GENUS, -SPECIES, -FINAL_NAME) %>%
pivot_wider(names_from = SCIENTIFIC,
names_prefix = "tax_",
values_from = TOTAL,
values_fn = sum,
values_fill = 0)
####Need to add if group here for just "abundance"
if(dataType == "abun"){
if(standardize == "none"){
}
if(standardize %in% c("CPUE", "MGMS")){
NRSA_FISH_comm2 <- NRSA_FISH_comm %>%
dplyr::filter(!is.na(NumberSeineHauls) | !is.na(MinutesShockTime) |
!is.na(RCH_LENGTH)) %>%
dplyr::mutate(dplyr::across(tidyselect::contains("tax_"),
~. / StandardMethod / RCH_LENGTH ))
if(standardize == "MGMS"){
NRSATotalCPUE.df = NRSA_FISH_comm2 %>%
dplyr::mutate(TotalCPUE = rowSums(dplyr::across(tidyselect::contains("tax_")))) # sum CPUE for all taxa
NRSAMeanTotalCPUE = NRSATotalCPUE.df[!is.na(NRSATotalCPUE.df$TotalCPUE),] %>%
dplyr::group_by(MethodBasic) %>%
dplyr::summarise(MeanTotalCPUE = mean(TotalCPUE)) # calculate avg CPUE for each sampling method
NRSA_FISH_comm2 = dplyr::left_join(NRSA_FISH_comm2, NRSAMeanTotalCPUE, by = "MethodBasic")
NRSA_FISH_comm2 = NRSA_FISH_comm2 %>%
dplyr::mutate(dplyr::across(tidyselect::contains("tax_"),
.fns = ~./MeanTotalCPUE)) %>%# divide each row by the mean CPUE for its respective sampling method
# (this is now in units of MGMS)
dplyr::relocate(tidyselect::contains("tax_"),
.after = tidyselect::last_col())
}
NRSA_FISH_comm <- NRSA_FISH_comm2
}
}
NRSA_FISH_comm <- NRSA_FISH_comm %>%
mutate(ProjectAssignedSampleLabel = paste(SITE_ID, UID, sep = "_"),
CollectionYear = lubridate::year(DATE_COL),
CollectionMonth = lubridate::month(DATE_COL),
CollectionDayOfYear = lubridate::yday(DATE_COL),
ProjectLabel = ifelse(CollectionYear %in% c(2008,2009),
"NRSA0809",
ifelse(CollectionYear %in% c(2013,2014),
"NRSA1314",
"NRSA1819")),
CoordinateDatum = "NAD83") %>%
rename(NAWQA.SMCOD = UID,
SiteNumber = SITE_ID,
SiteName = SITENAME,
SiteTypeName = FISH_PROTOCOL,
CollectionDate = DATE_COL,
Latitude_dd = LAT_DD83,
Longitude_dd = LON_DD83,
MethodBasic = MethodBasic,
Methods = MethodBasic,
SiteVisitSampleNumber = VISIT_NO,
ReachLengthFished_m = RCH_LENGTH) %>%
dplyr::select(-STATE, -ELECTROFISH, -METHOD,-FISHED)
##Need to add the following columns to the NRSA dataset:
##ProjectLabel (Which bout)
##ProjectAssignedSample Label (Site_ID;UID)
##NAWQA.SMCOD (UID)
##MAKE SURE COLLECTION DATE IS as.Date in both
##Add CollectionYear, CollectionMonth, CollectionDayOfYear
#SiteNumber in USGS should be USGS-... (Site_ID)
##SiteName (SITENAME)
##SiteTypeName (FISH_PROTOCOL)
#Remove FIPS and STAET from both
##Latitude_dd and Longitude_dd (LAT and LON)
##CoordinateDatum (NAD83)
#MethodCode (Electrofish)
##MethodBasic (Method - Siene or Shocking)
##StandardMethod (FISHED)
full_fish <- bind_rows(fish_comm2 %>%
mutate(SiteNumber = paste("USGS-",SiteNumber,sep = ""),
# StandardMethod = as.character(StandardMethod),
Agency = "USGS") %>%
relocate(Agency, .after = SiteNumber) %>%
dplyr::select(-StateFIPSCode, -CountyFIPSCode, -MethodCode), NRSA_FISH_comm %>% mutate(Agency = "EPA")) %>%
mutate(dplyr::across(tidyselect::starts_with("tax_"), ~tidyr::replace_na(.,0)))
if(dataType == "occur") {
full_fish = full_fish %>%
dplyr::mutate(dplyr::across(tidyselect::starts_with("tax_"),
~replace(., . > 0, 1)))
}
} else {full_fish = fish_comm2 %>%
mutate(SiteNumber = paste("USGS-",SiteNumber,sep = ""),
# StandardMethod = as.character(StandardMethod),
Agency = "USGS")%>%
relocate(Agency, .after = SiteNumber) %>%
dplyr::select(-StateFIPSCode, -CountyFIPSCode)}
##Remove those observations with 0s in their StandardMethod
full_fish <- full_fish %>%
filter(StandardMethod != 0) %>%
dplyr::select(-NumberSeineHauls, - NumberStationarySetsKicks, -NumberSnorkelingTransects,
-SecondsShockTime, - MinutesShockTime, -MethodBasic, -StandardMethod,
-MeanTotalCPUE)
colnames(full_fish) = sub("tax_", "", colnames(full_fish))
if(!isTRUE(hybrids)) {
full_fish <- full_fish %>%
dplyr::select(-c(tidyselect::contains(" x ")))
}
return(data.frame(full_fish))
}
fullyfish <- getFishData(dataType = "abun", standardize = "MGMS")
devtools::document()
rm(list = c("getFishData"))
devtools::document()
install.packages("ritis")
install.packages("ritis")
library(ritis)
?ritis
colnames(fullyfish)
colnames(fullyfish)[25:822]
grepl(".x.",colnames(fullyfish)[25:822])
colnames(fullyfish)[25:822][!grepl(".x.",colnames(fullyfish)[25:822])]
gsub("."," ",colnames(fullyfish)[25:822][!grepl(".x.",colnames(fullyfish)[25:822])]))
print(gsub("."," ",colnames(fullyfish)[25:822][!grepl(".x.",colnames(fullyfish)[25:822])])))
colnames(fullyfish)[25:822][!grepl(".x.",colnames(fullyfish)[25:822])]))
colnames(fullyfish)[25:822]
colnames(fullyfish)[25:822][!grepl(".x.",colnames(fullyfish)[25:822])]
fishtax <- colnames(fullyfish)[25:822][!grepl(".x.",colnames(fullyfish)[25:822])]
gsub("."," ",fishtax)
gsub("\."," ",fishtax)
fishtax
gsub("\."," ",fishtax)
gsub("\\."," ",fishtax)
gsub("\\."," ",fishtax)[1]
search_scientific(gsub("\\."," ",fishtax)[1])
View(search_scientific(gsub("\\."," ",fishtax)[1]))
taxa <- search_scientific(gsub("\\."," ",fishtax))
taxa
gsub("\\."," ",fishtax)
search_scientific(gsub("\\."," ",fishtax))
taxa <- search_scientific(gsub("\\."," ",fishtax)[2])
taxa
gsub("\\."," ",fishtax)
taxa <- search_scientific(gsub("\\."," ",fishtax)[669])
taxa
fishtax <- gsub("\\."," ",fishtax)
taxatsn <- data.frame()
i = 1
taxa <- NULL
taxa <- search_scientific(fishtax[i])
taxatsn <- bind_rows(taxatsn, taxa)
taxatsn
taxa <- NULL
taxatsn <- data.frame()
for(i in 1:669){
taxa <- NULL
taxa <- search_scientific(fishtax[i])
taxa$Requested <- fishtax[i]
taxatsn <- bind_rows(taxatsn, taxa)
}
taxatsn
View(taxatsn)
View(taxatsn %>%
filter(combinedName == Requested))
fishtax
maintax <- taxatsn %>%
filter(combinedName == Requested)
taxatsn %>%
filter(!combinedName %in% maintax$Requested)
View(taxatsn %>%
filter(!combinedName %in% maintax$Requested))
View(taxatsn %>%
filter(!Requested %in% maintax$Requested))
Requested
maintax
576+76
576+76 + 1
fishtax
View(taxatsn %>%
filter(!Requested %in% fishtax))
maintax
View(taxatsn %>%
filter(!Requested %in% maintax$Requested))
maintax <- taxatsn %>%
filter(combinedName == Requested |
combinedName == "Cottus bairdii")
View(taxatsn %>%
filter(!Requested %in% maintax$Requested))
fishtax[!fishtax %in% maintax$Requested]
global_species_completeness(tsn = 180541)
synonym_names(tsn = 180541)
rank_name(tsn = 202385)
full_record(tsn = 50423)
accepted_names(tsn = 504239)
accepted_names(tsn = 208527)
maintax
taxa2 = NULL
taxacc <- data.frame()
for(i in 1:nrow(maintax)){
taxa2 <- NULL
taxa2 <- accepted_names(tsn = maintax$tsn[i])
taxa2$Requested <- maintax$Requested[i]
taxaacc <- bind_rows(axacc, taxa2)
}
taxaacc
taxa2 = NULL
taxacc <- data.frame()
i = 1
taxa2 <- accepted_names(tsn = maintax$tsn[i])
taxa2
maintax$tsn
taxa2$Requested <- maintax$Requested[i]
taxa2
taxa2 = NULL
taxacc <- data.frame()
for(i in 1:nrow(maintax)){
taxa2 <- NULL
taxa2 <- accepted_names(tsn = maintax$tsn[i])
taxaacc <- bind_rows(axacc, taxa2)
}
taxaacc
taxa2
i
taxa2 <- NULL
taxa2 <- accepted_names(tsn = maintax$tsn[i])
taxa2
axacc
taxacc <- data.frame()
for(i in 1:nrow(maintax)){
taxa2 <- NULL
taxa2 <- accepted_names(tsn = maintax$tsn[i])
taxaacc <- bind_rows(taxacc, taxa2)
}
taxaacc
taxatsn
View(taxatsn)
fullyfish %>%
filter(Cottus.bairdi != 0)
View(fullyfish %>%
filter(Cottus.bairdi != 0))
fishtax[!fishtax %in% maintax$Requested]
View(fullyfish %>%
filter(Notropis.amplamala != 0))
View(fullyfish %>%
filter(Ericymba.buccata != 0))
fishtax
fishtax[!fishtax %in% maintax$Requested]
sort(fishtax[!fishtax %in% maintax$Requested])
sort(fishtax)
10 / 2
2 / 2
12/2
full_fish %>%
mutate("Cottus bairdii" = "Cottus bairdii" + "Cottus bairdi")
full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`)
full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`) %>%
dplyr::select(-`Cottus bairdi`)
sort(fishtax)
fishtax[!fishtax %in% maintax$Requested]
fishtax[grepl(" cf", fishtax)]
View(fullyfish %>%
filter(Coregonus.haiaka != 0))
View(fullyfish %>%)
View(fullyfish %>% filter(SiteNumber == "NRS_ND-10442"
))
full_fish <- bind_rows(fish_comm2 %>%
mutate(SiteNumber = paste("USGS-",SiteNumber,sep = ""),
# StandardMethod = as.character(StandardMethod),
Agency = "USGS") %>%
relocate(Agency, .after = SiteNumber) %>%
dplyr::select(-StateFIPSCode, -CountyFIPSCode, -MethodCode), NRSA_FISH_comm %>% mutate(Agency = "EPA")) %>%
mutate(dplyr::across(tidyselect::starts_with("tax_"), ~tidyr::replace_na(.,0)))
full_fish <- full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`,
`Macrhybopsis aestivalis` = `Macrhybopsis aestivalis` + `Macrhybopsis cf aestivalis`,
`Notropis spectrunculus` = `Notropis spectrunculus` + `Notropis cf spectrunculus`,
`Catostomus latipinnis` = `Catostomus latipinnis` + `Catostomus cf latipinnis`,
`Cyprinella zanema` = `Cyprinella zanema` + `Cyprinella cf zanema`,
`Noturus leptacanthus` = `Noturus leptacanthus` + `Noturus c f leptacanthus`) %>%
dplyr::select(-`Cottus bairdi`,
-`Macrhybopsis cf aestivalis`,
-`Notropis cf spectrunculus`,
-`Catostomus cf latipinnis`,
-`Cyprinella cf zanema`,
-`Noturus c f leptacanthus`)
full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`)
full_fish
colnames(full_fish) = sub("tax_", "", colnames(full_fish))
full_fish <- full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`,
`Macrhybopsis aestivalis` = `Macrhybopsis aestivalis` + `Macrhybopsis cf aestivalis`,
`Notropis spectrunculus` = `Notropis spectrunculus` + `Notropis cf spectrunculus`,
`Catostomus latipinnis` = `Catostomus latipinnis` + `Catostomus cf latipinnis`,
`Cyprinella zanema` = `Cyprinella zanema` + `Cyprinella cf zanema`,
`Noturus leptacanthus` = `Noturus leptacanthus` + `Noturus c f leptacanthus`) %>%
dplyr::select(-`Cottus bairdi`,
-`Macrhybopsis cf aestivalis`,
-`Notropis cf spectrunculus`,
-`Catostomus cf latipinnis`,
-`Cyprinella cf zanema`,
-`Noturus c f leptacanthus`)
colnames(full_fish)
full_fish <- full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`,
`Macrhybopsis aestivalis` = `Macrhybopsis aestivalis` + `Macrhybopsis cf. aestivalis`,
`Notropis spectrunculus` = `Notropis spectrunculus` + `Notropis cf. spectrunculus`,
`Catostomus latipinnis` = `Catostomus latipinnis` + `Catostomus cf. latipinnis`,
`Cyprinella zanema` = `Cyprinella zanema` + `Cyprinella cf. zanema`,
`Noturus leptacanthus` = `Noturus leptacanthus` + `Noturus c f leptacanthus`) %>%
dplyr::select(-`Cottus bairdi`,
-`Macrhybopsis cf aestivalis`,
-`Notropis cf spectrunculus`,
-`Catostomus cf latipinnis`,
-`Cyprinella cf zanema`,
-`Noturus c f leptacanthus`)
full_fish <- full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`,
`Macrhybopsis aestivalis` = `Macrhybopsis aestivalis` + `Macrhybopsis cf. aestivalis`,
`Notropis spectrunculus` = `Notropis spectrunculus` + `Notropis cf. spectrunculus`,
`Catostomus latipinnis` = `Catostomus latipinnis` + `Catostomus cf. latipinnis`,
`Cyprinella zanema` = `Cyprinella zanema` + `Cyprinella cf. zanema`,
`Noturus leptacanthus` = `Noturus leptacanthus` + `Noturus c.f. leptacanthus`) %>%
dplyr::select(-`Cottus bairdi`,
-`Macrhybopsis cf aestivalis`,
-`Notropis cf spectrunculus`,
-`Catostomus cf latipinnis`,
-`Cyprinella cf zanema`,
-`Noturus c f leptacanthus`)
full_fish <- full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`,
`Macrhybopsis aestivalis` = `Macrhybopsis aestivalis` + `Macrhybopsis cf. aestivalis`,
`Notropis spectrunculus` = `Notropis spectrunculus` + `Notropis cf. spectrunculus`,
`Catostomus latipinnis` = `Catostomus latipinnis` + `Catostomus cf. latipinnis`,
`Cyprinella zanema` = `Cyprinella zanema` + `Cyprinella cf. zanema`,
`Noturus leptacanthus` = `Noturus leptacanthus` + `Noturus c f. leptacanthus`) %>%
dplyr::select(-`Cottus bairdi`,
-`Macrhybopsis cf aestivalis`,
-`Notropis cf spectrunculus`,
-`Catostomus cf latipinnis`,
-`Cyprinella cf zanema`,
-`Noturus c f leptacanthus`)
sort(colnames(full_fish))
full_fish <- full_fish %>%
mutate(`Cottus bairdii` = `Cottus bairdii` + `Cottus bairdi`,
`Macrhybopsis aestivalis` = `Macrhybopsis aestivalis` + `Macrhybopsis cf. aestivalis`,
`Notropis spectrunculus` = `Notropis spectrunculus` + `Notropis cf. spectrunculus`,
`Catostomus latipinnis` = `Catostomus latipinnis` + `Catostomus cf. latipinnis`,
`Cyprinella zanema` = `Cyprinella zanema` + `Cyprinella cf. zanema`,
`Noturus leptacanthus` = `Noturus leptacanthus` + `Noturus sp. c.f. leptacanthus`) %>%
dplyr::select(-`Cottus bairdi`,
-`Macrhybopsis cf. aestivalis`,
-`Notropis cf. spectrunculus`,
-`Catostomus cf. latipinnis`,
-`Cyprinella cf. zanema`,
-`Noturus sp. c.f. leptacanthus`)
full_fish
colnames(full_fish)
##Remove those observations with 0s in their StandardMethod
full_fish <- full_fish %>%
filter(StandardMethod != 0) %>%
dplyr::select(-NumberSeineHauls, - NumberStationarySetsKicks, -NumberSnorkelingTransects,
-SecondsShockTime, - MinutesShockTime, -MethodBasic, -StandardMethod,
-MeanTotalCPUE)
full_fish
colnames(full_fish)
fishcommm <- full_fish[,25:816]
fishcommm2 <- fishcommm[rowSums(fishcommm) > 0,]
fishcommm3 <- fishcommm2[,colSums(fishcommm2) > 0]
fishsize <- full_fish$SiteTypeName[rowSums(fishcommm) > 0]
fishsize = ifelse(fishsize == "BOATABLE",
"BOATABLE",
"WADEABLE")
agency <- full_fish$Agency[rowSums(fishcommm) > 0]
ord1 <- dbrda(fishcommm3 ~1, distance = "bray")
plot(ord1); ordiellipse(ord1, agency, col = c("red","blue"), label = T)
devtools::document()
devtools::install_github("StreamData/StreamData",
auth_token = "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",
build_vignette = TRUE,
force = T
)
devtools::install_github("StreamData/StreamData",
auth_token = "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",
build_vignette = F,
force = T
)
devtools::build()
devtools::document()
devtools::install_github("StreamData/StreamData",
auth_token = "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",
build_vignette = F,
force = T
)
