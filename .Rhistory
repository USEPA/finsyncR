M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence")
gam(presence ~ Year + s(Year, genera, bs = "re"),
data = dat1,
family = binomial)
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.25),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.25),
D = rbinom(20, 1, 0.25),
E = rbinom(20, 1, 0.25),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.25),
H = rbinom(20, 1, 0.25),
I = rbinom(20, 1, 0.25),
J = rbinom(20, 1, 0.25),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
gam(presence ~ Year + s(Year, genera, bs = "re"),
data = dat1,
family = binomial)
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re"),
data = dat1,
family = binomial)
m1
summary(m1)
library(tidyverse); library(mgcv); library(gammit)
extract_ranef(m1)
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re") +
s(genera),
data = dat1,
family = binomial)
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re") +
s(genera, bs = "re"),
data = dat1,
family = binomial)
summary(m1)
extract_ranef(m1)
View(extract_ranef(m1))
extract_fixef(m1)
extract_fixed(m1)
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.1),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.9),
I = c(1,0,1,1,1,1, rep(0, 10),1,0,0,0),
J = rbinom(20, 1, 0.25),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
dat1
(1,0,1,1,1,1, rep(0, 10),1,0,0,0)
c(1,0,1,1,1,1, rep(0, 10),1,0,0,0)
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.1),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.9),
I = c(1,0,1,1,1,1, rep(0, 10),1,0,0,0),
J = rev(c(1,0,1,1,1,1, rep(0, 10),1,0,0,0)),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
dat1
rev(c(1,0,1,1,1,1, rep(0, 10),1,0,0,0))
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.1),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.9),
I = c(1,0,1,1,1,1, rep(0, 10),1,0,0,0),
J = rev(c(1,0,1,1,1,1, rep(0, 10),1,0,0,0)),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re") +
s(genera, bs = "re"),
data = dat1,
family = binomial)
summary(m1)
View(extract_ranef(m1))
extract_fixed(m1)
rbinom(20, 1, 0.1)
rbinom(20, 1, 0.25)
dat1
data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.1),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.9),
I = c(1,0,1,1,1,1, rep(0, 10),1,0,0,0),
J = rev(c(1,0,1,1,1,1, rep(0, 10),1,0,0,0)),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
)
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.5),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.9),
I = c(1,0,1,1,1,1, rep(0, 10),1,0,0,0),
J = rev(c(1,0,1,1,1,1, rep(0, 10),1,0,0,0)),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re") +
s(genera, bs = "re"),
data = dat1,
family = binomial)
summary(m1)
extract_fixed(m1)
View(extract_ranef(m1))
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.5),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.9),
I = c(1,0,1,1,1,1, rep(0, 10),1,0,0,0),
J = rev(c(1,0,1,1,1,1, rep(0, 10),1,0,0,0)),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re") +
s(genera, bs = "re"),
data = dat1,
family = binomial)
summary(m1)
View(extract_ranef(m1))
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.5),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.7),
I = c(1,0,1,1,1,1, rep(0, 10),1,0,0,0),
J = rev(c(1,0,1,1,1,1, rep(0, 10),1,0,0,0)),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re") +
s(genera, bs = "re"),
data = dat1,
family = binomial)
summary(m1)
View(extract_ranef(m1))
dat1 <- data.frame(Year = 1:20,
A = rbinom(20, 1, 0.5),
B = rbinom(20, 1, 0.25),
C = rbinom(20, 1, 0.75),
D = rbinom(20, 1, 0.8),
E = rbinom(20, 1, 0.5),
F = rbinom(20, 1, 0.25),
G = rbinom(20, 1, 0.45),
H = rbinom(20, 1, 0.7),
I = c(1,0,1,1,1,1, rep(0, 10),0,0,0,0),
J = rev(c(1,0,1,1,1,1, rep(0, 10),0,0,0,0)),
K = rbinom(20, 1, 0.25),
L = c(0,1, rep(0, 18)),
M = c(rep(0, 18),1,0)
) %>%
pivot_longer(cols = A:M,
names_to = "genera",
values_to = "presence") %>%
mutate(genera = factor(genera))
m1 <- gam(presence ~ Year + s(Year, genera, bs = "re") +
s(genera, bs = "re"),
data = dat1,
family = binomial)
summary(m1)
View(extract_ranef(m1))
dat_alpha_all_LU_Ag
library(StreamData)
# read in datasets
setwd("C:/Users/mikem/Documents/Research/USGS Stream Macros")
# filter out observations with in which sample coverage gamma was not
# estimated between 0.7 and 0.8
dat_div_all_LU_Ag <- read.csv("dat_div_all_LU_Ag.csv", header = T, stringsAsFactors = F,
row.names = 1,
colClasses = c("Ecoregion_NARS" = "factor")) %>%
filter(sc >= 0.7 & sc <= 0.8) %>%
mutate(Agency = "EPA") %>%
mutate(EcoRegion_Year = paste(Ecoregion_NARS, Year, sep = "_"))
# drop ecoregion-landuse-agencies not in the div files
dat_alpha_all_LU_Ag <- read.csv("dat_alpha_all_LU_Ag.csv", header = T, stringsAsFactors = F,
row.names = 1,
colClasses = c("Ecoregion_NARS" = "factor")) %>%
filter(EcoRegion_Year %in% dat_div_all_LU_Ag$EcoRegion_Year)
## get site-year combos for landuse/landcover data
inverts_sites <- dat_alpha_all_LU_Ag %>%
dplyr::select(SiteNumber, CollectionYear) %>%
group_by(SiteNumber, CollectionYear) %>%
slice(1) %>%
ungroup()
# Now that we have a input dataframe, we need to set the scale at which the
# LULC data are to be generated: either the catchment ("Cat") or watershed
# ("Ws") scales.
# Finally, we have an option to group LU/LC types into five categories:
#  "urban" (grouping of all urban land covers)
#  "forestwater" (grouping of deciduous, coniferous, and mixed forests as well
#                 all wetlands and open water)
#  "other" (grouping of shrub, barren land, grassland)
#  "ag" (hay/pasture and  crop landuse).
# Let's get the grouped LULC data at the catchment scale
invert_NLCD <- getNLCDData(data = inverts_sites,
scale = "Cat",
group = F)
##Group everything
invert_NLCD$PctUrb_Cat = rowSums(invert_NLCD[ , 4:7])
invert_NLCD$PctAg_Cat = rowSums(invert_NLCD[ , 14:15])
invert_NLCD$PctForWet_Cat = rowSums(invert_NLCD[ , c(3, 9:11, 16:17)])
invert_NLCD$PctOther_Cat = rowSums(invert_NLCD[ , c(8, 12, 13)])
##Select only those columns of interest (year, site, and the grouped NLCD)
invert_NLCD <- invert_NLCD[, c(1, 2, 18:21)]
##Join the main dataset with the NLCD data
dat_alpha_all_LU_Ag <- dat_alpha_all_LU_Ag %>%
left_join(invert_NLCD)
##Find the maximum value across the four NLCD groups for each row
dat_alpha_all_LU_Ag$DOM <- do.call(pmax, dat_alpha_all_LU_Ag[,c("PctAg_Cat", "PctUrb_Cat",
"PctForWet_Cat", "PctOther_Cat")])
##Give the NLCD Grouping based on whichever landuse category has the dominant
##percent LULC
dat_alpha_all_LU_Ag$NLCDGroup <- ifelse(dat_alpha_all_LU_Ag$PctAg_Cat == dat_alpha_all_LU_Ag$DOM,
"Ag",
ifelse(dat_alpha_all_LU_Ag$PctUrb_Cat == dat_alpha_all_LU_Ag$DOM,
"Urban",
ifelse(dat_alpha_all_LU_Ag$PctForWet_Cat == dat_alpha_all_LU_Ag$DOM,
"ForestWet",
"Other")))
##Retain only those columns that are needed for the analyses
##Ecoregion; Year; CollectionYear; NLCDGroup; Agency (and all genera)
##
##Pivot longer, but first sum each column to the region-year-NLCD-agency group;
##then convert all values >0 to 1
inverts_long_NLCD <- dat_alpha_all_LU_Ag %>%
select(Ecoregion_NARS, EcoRegion_Year, Year, NLCDGroup, Agency,
Acentrella.Acerpenna.Amercaenis.Americabaetis.Anafroptilum.Anthopotamus.Apobaetis.Attenella.Baetis.Baetisca.Barbaetis.Brachycercus.Caenis.Callibaetis.Campsurus.Caudatella.Centroptilum.Choroterpes.Cinygma.Cinygmula.Cloe.Cloeon.Dannella.Dentatella.Diphetor.Drunella.Ecdyonurus.Ecdyurus.Epeorus.Ephemera.Ephemerella.Ephoron.Eurycaenis.Eurylophella.Euthyplocia.Fallceon.Habrophlebia.Habrophlebiodes.Heptagenia.Heterocloeon.Hexagenia.Iron.Ironodes.Iswaeon.Labiobaetis.Leptophlebia.Leucrocuta.Litobrancha.Maccaffertium.Matriella.Neochoroterpes.Nixe.Palingenia.Paracloeodes.Paraleptophlebia.Penelomax.Plauditus.Potamanthus.Procloeon.Pseudocloeon.Raptoheptagenia.Rhithrogena.Serratella.Sparbarus.Stenacron.Stenonema.Susperatus.Teloganopsis.Timpanoga.Tsalia:Melanoides) %>%
group_by(Ecoregion_NARS, EcoRegion_Year, Year, NLCDGroup, Agency) %>%
summarize(across(everything(), sum)) %>%
ungroup() %>%
pivot_longer(cols = Acentrella.Acerpenna.Amercaenis.Americabaetis.Anafroptilum.Anthopotamus.Apobaetis.Attenella.Baetis.Baetisca.Barbaetis.Brachycercus.Caenis.Callibaetis.Campsurus.Caudatella.Centroptilum.Choroterpes.Cinygma.Cinygmula.Cloe.Cloeon.Dannella.Dentatella.Diphetor.Drunella.Ecdyonurus.Ecdyurus.Epeorus.Ephemera.Ephemerella.Ephoron.Eurycaenis.Eurylophella.Euthyplocia.Fallceon.Habrophlebia.Habrophlebiodes.Heptagenia.Heterocloeon.Hexagenia.Iron.Ironodes.Iswaeon.Labiobaetis.Leptophlebia.Leucrocuta.Litobrancha.Maccaffertium.Matriella.Neochoroterpes.Nixe.Palingenia.Paracloeodes.Paraleptophlebia.Penelomax.Plauditus.Potamanthus.Procloeon.Pseudocloeon.Raptoheptagenia.Rhithrogena.Serratella.Sparbarus.Stenacron.Stenonema.Susperatus.Teloganopsis.Timpanoga.Tsalia:Melanoides,
names_to = "genera",
values_to = "presence") %>%
ungroup() %>%
mutate(presence = ifelse(presence > 0, 1, 0))
inverts_long_NLCD
inverts_long_NLCD %>%
group_by(NLCDGroup, genera) %>%
# group_by(Ecoregion_NARS, NLCDGroup, Agency, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 0) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, NLCDGroup, Agency, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 0) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, NLCDGroup, Agency, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 2) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, NLCDGroup, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 2) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, NLCDGroup, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 0) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, NLCDGroup, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 0) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
##Need to remove those genera that never appear in a LU/Region/Agency combination
##Removes >50% of rows; which should improve time for models to run
##Also, need to remove those genera that appear in 2 or fewer years within a
##LU/Region/Agency combination (LU_ER < 3)
inverts_long_NLCD <- inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, NLCDGroup, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 0) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_NLCD
inverts_long_Agency <- inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, NLCDGroup, genera, Agency) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 0) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_Agency
write.csv(inverts_long_NLCD, "genera_bam_LU_dat.csv",
row.names = F)
write.csv(inverts_long_Agency, "genera_bam_LU_agency_dat.csv",
row.names = F)
inverts_long_NLCD
inverts_long_Agency
library(tidyverse)
library(StreamData)
library(mgcv)
library(gammit)
setwd("C:/Users/mikem/Documents/Research/USGS Stream Macros")
# filter out observations with in which sample coverage gamma was not
# estimated between 0.7 and 0.8
dat_div_all_LU_Ag <- read.csv("dat_div_all_LU_Ag.csv", header = T, stringsAsFactors = F,
row.names = 1,
colClasses = c("Ecoregion_NARS" = "factor")) %>%
filter(sc >= 0.7 & sc <= 0.8) %>%
mutate(Agency = "EPA") %>%
mutate(EcoRegion_Year = paste(Ecoregion_NARS, Year, sep = "_"))
# drop ecoregion-landuse-agencies not in the div files
dat_alpha_all_LU_Ag <- read.csv("dat_alpha_all_LU_Ag.csv", header = T, stringsAsFactors = F,
row.names = 1,
colClasses = c("Ecoregion_NARS" = "factor")) %>%
filter(EcoRegion_Year %in% dat_div_all_LU_Ag$EcoRegion_Year)
## get site-year combos for landuse/landcover data
inverts_sites <- dat_alpha_all_LU_Ag %>%
dplyr::select(SiteNumber, CollectionYear) %>%
group_by(SiteNumber, CollectionYear) %>%
slice(1) %>%
ungroup()
# Now that we have a input dataframe, we need to set the scale at which the
# LULC data are to be generated: either the catchment ("Cat") or watershed
# ("Ws") scales.
# Finally, we have an option to group LU/LC types into five categories:
#  "urban" (grouping of all urban land covers)
#  "forestwater" (grouping of deciduous, coniferous, and mixed forests as well
#                 all wetlands and open water)
#  "other" (grouping of shrub, barren land, grassland)
#  "ag" (hay/pasture and  crop landuse).
# Let's get the grouped LULC data at the catchment scale
invert_NLCD <- getNLCDData(data = inverts_sites,
scale = "Cat",
group = F)
##Group everything
invert_NLCD$PctUrb_Cat = rowSums(invert_NLCD[ , 4:7])
invert_NLCD$PctAg_Cat = rowSums(invert_NLCD[ , 14:15])
invert_NLCD$PctForWet_Cat = rowSums(invert_NLCD[ , c(3, 9:11, 16:17)])
invert_NLCD$PctOther_Cat = rowSums(invert_NLCD[ , c(8, 12, 13)])
##Select only those columns of interest (year, site, and the grouped NLCD)
invert_NLCD <- invert_NLCD[, c(1, 2, 18:21)]
##Join the main dataset with the NLCD data
dat_alpha_all_LU_Ag <- dat_alpha_all_LU_Ag %>%
left_join(invert_NLCD)
##Find the maximum value across the four NLCD groups for each row
dat_alpha_all_LU_Ag$DOM <- do.call(pmax, dat_alpha_all_LU_Ag[,c("PctAg_Cat", "PctUrb_Cat",
"PctForWet_Cat", "PctOther_Cat")])
##Give the NLCD Grouping based on whichever landuse category has the dominant
##percent LULC
dat_alpha_all_LU_Ag$NLCDGroup <- ifelse(dat_alpha_all_LU_Ag$PctAg_Cat == dat_alpha_all_LU_Ag$DOM,
"Ag",
ifelse(dat_alpha_all_LU_Ag$PctUrb_Cat == dat_alpha_all_LU_Ag$DOM,
"Urban",
ifelse(dat_alpha_all_LU_Ag$PctForWet_Cat == dat_alpha_all_LU_Ag$DOM,
"ForestWet",
"Other")))
##Retain only those columns that are needed for the analyses
##Ecoregion; Year; CollectionYear; NLCDGroup; Agency (and all genera)
##
##Pivot longer, but first sum each column to the region-year-NLCD-agency group;
##then convert all values >0 to 1
inverts_long_NLCD <- dat_alpha_all_LU_Ag %>%
select(Ecoregion_NARS, EcoRegion_Year, Year, NLCDGroup, Agency,
Acentrella.Acerpenna.Amercaenis.Americabaetis.Anafroptilum.Anthopotamus.Apobaetis.Attenella.Baetis.Baetisca.Barbaetis.Brachycercus.Caenis.Callibaetis.Campsurus.Caudatella.Centroptilum.Choroterpes.Cinygma.Cinygmula.Cloe.Cloeon.Dannella.Dentatella.Diphetor.Drunella.Ecdyonurus.Ecdyurus.Epeorus.Ephemera.Ephemerella.Ephoron.Eurycaenis.Eurylophella.Euthyplocia.Fallceon.Habrophlebia.Habrophlebiodes.Heptagenia.Heterocloeon.Hexagenia.Iron.Ironodes.Iswaeon.Labiobaetis.Leptophlebia.Leucrocuta.Litobrancha.Maccaffertium.Matriella.Neochoroterpes.Nixe.Palingenia.Paracloeodes.Paraleptophlebia.Penelomax.Plauditus.Potamanthus.Procloeon.Pseudocloeon.Raptoheptagenia.Rhithrogena.Serratella.Sparbarus.Stenacron.Stenonema.Susperatus.Teloganopsis.Timpanoga.Tsalia:Melanoides) %>%
group_by(Ecoregion_NARS, EcoRegion_Year, Year, NLCDGroup, Agency) %>%
summarize(across(everything(), sum)) %>%
ungroup() %>%
pivot_longer(cols = Acentrella.Acerpenna.Amercaenis.Americabaetis.Anafroptilum.Anthopotamus.Apobaetis.Attenella.Baetis.Baetisca.Barbaetis.Brachycercus.Caenis.Callibaetis.Campsurus.Caudatella.Centroptilum.Choroterpes.Cinygma.Cinygmula.Cloe.Cloeon.Dannella.Dentatella.Diphetor.Drunella.Ecdyonurus.Ecdyurus.Epeorus.Ephemera.Ephemerella.Ephoron.Eurycaenis.Eurylophella.Euthyplocia.Fallceon.Habrophlebia.Habrophlebiodes.Heptagenia.Heterocloeon.Hexagenia.Iron.Ironodes.Iswaeon.Labiobaetis.Leptophlebia.Leucrocuta.Litobrancha.Maccaffertium.Matriella.Neochoroterpes.Nixe.Palingenia.Paracloeodes.Paraleptophlebia.Penelomax.Plauditus.Potamanthus.Procloeon.Pseudocloeon.Raptoheptagenia.Rhithrogena.Serratella.Sparbarus.Stenacron.Stenonema.Susperatus.Teloganopsis.Timpanoga.Tsalia:Melanoides,
names_to = "genera",
values_to = "presence") %>%
ungroup() %>%
mutate(presence = ifelse(presence > 0, 1, 0))
##Need to remove those genera that never appear in a LU/Region/Agency combination
##Removes >50% of rows; which should improve time for models to run
##Also, need to remove those genera that appear in 2 or fewer years within a
##LU/Region/Agency combination (LU_ER < 3)
inverts_long_NLCD <- inverts_long_NLCD %>%
# group_by(NLCDGroup, genera) %>%
group_by(Ecoregion_NARS, genera) %>%
mutate(LU_ER = sum(presence)) %>%
filter(LU_ER > 0) %>%
dplyr::select(-LU_ER) %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
inverts_long_NLCD
write.csv(inverts_long_NLCD, "genera_bam_regional0drop_dat.csv",
row.names = F)
inverts_long_NLCD <- read.csv("genera_bam_regional0drop_dat.csv") %>%
mutate(Gen_Eco = factor(paste(genera, Ecoregion_NARS, sep = "_")),
genera = factor(genera),
Agency = factor(Agency),
Gen_Agency = factor(paste(genera, Agency, sep = "_")))
##Split the dataset and create datasets for each LU
LU_list <- split(inverts_long_NLCD, inverts_long_NLCD$NLCDGroup)
ag_genera <- LU_list$Ag
fw_genera <- LU_list$ForestWet
ur_genera <- LU_list$Urban
ot_genera <- LU_list$Other
ag_genera
fw_genera
ur_genera
ot_genera
