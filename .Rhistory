names_to = "Info"
) %>%
##Get info on whether it is for the Ws or Cat, whether the column has specific
##values for each year (NLCD);
##Extract what the data is (Info2): i.e. PctUrb, PctCrop, etc.
##From this, provide broad groupings for NLCD data:
## Urb, Crop, and Hay are HumanDominated; everything else is "Natural"
dplyr::mutate(Scale = ifelse(grepl("Cat", Info),
"Cat",
"Ws"),
Y_spec = ifelse(grepl("20", Info),
"Y",
"N"),
Year = ifelse(Scale == "Cat" & Y_spec == "Y",
stringr::str_sub(Info, -7, -4),
ifelse(Scale == "Ws" & Y_spec == "Y",
stringr::str_sub(Info, -6, -3),
NA
)),
Info2 = ifelse(is.na(Year),
stringr::str_remove(Info, scale),
stringr::str_remove(stringr::str_remove(Info, scale), Year))
) %>%
dplyr::filter(Scale %in% scale) %>%
dplyr::filter(Info2 %in% c("PctBl", "PctConif", "PctCrop", "PctDecid", "PctGrs",
"PctHay", "PctHbWet", "PctMxFst", "PctOw", "PctShrb",
"PctUrbHi", "PctUrbLo", "PctUrbMd", "PctUrbOp",
"PctWdWet")) %>%
##Remove columns we no longer need
dplyr::select(-Y_spec, -Info)
streamcat2 <- streamcat2 %>%
dplyr::mutate(Info2 = ifelse(grepl("PctUrb",
Info2),
"PctUrb",
ifelse(grepl(paste(c("PctDec","PctCon",
"PctMx"),
collapse = "|"),
Info2),
"PctFst",
ifelse(grepl(paste(c("PctGrs", "PctShrb",
"PctHay", "PctBl"),
collapse = "|"),
Info2),
"PctOpn",
ifelse(grepl(paste(c("PctOw", "PctWdWet",
"PctHbWet"),
collapse = "|"),
Info2),
"PctWater",
"PctCrop"))))
)
View(streamcat2)
View(streamcat2)
View(streamcat2)
streamcat2
streamcat2 <- streamcat2 %>%
dplyr::mutate(Info2 = ifelse(grepl("PctUrb",
Info2),
"PctUrb",
ifelse(grepl(paste(c("PctDec","PctCon",
"PctMx"),
collapse = "|"),
Info2),
"PctFst",
ifelse(grepl(paste(c("PctGrs", "PctShrb",
"PctHay", "PctBl"),
collapse = "|"),
Info2),
"PctOpn",
ifelse(grepl(paste(c("PctOw", "PctWdWet",
"PctHbWet"),
collapse = "|"),
Info2),
"PctWater",
"PctCrop"))))
) %>%
dplyr::group_by(COMID, SiteNumber, Scale, Year, Info2) %>%
dplyr::summarize(value = sum(value),
count = n())
View(streamcat2)
streamcat2 = streamcat %>%
##Select columns that are pertinent: site info, size of Ws/Cat, and above cols
dplyr::select(COMID, SiteNumber, CatAreaSqKm, WsAreaSqKm, all_of(cat_ws_cols)) %>%
##Pivot longer, so that non-site info columns are in "Info" and the values are
##in "value"; this will help with extraction of year and scale information
##In turn, this process will make it easier to join StreamCat data w/ biodata
tidyr::pivot_longer(cols = tidyselect::ends_with("Cat") |
tidyselect::ends_with("Ws") |
tidyselect::starts_with("Cat") |
tidyselect::starts_with("Ws"),
names_to = "Info"
) %>%
##Get info on whether it is for the Ws or Cat, whether the column has specific
##values for each year (NLCD);
##Extract what the data is (Info2): i.e. PctUrb, PctCrop, etc.
##From this, provide broad groupings for NLCD data:
## Urb, Crop, and Hay are HumanDominated; everything else is "Natural"
dplyr::mutate(Scale = ifelse(grepl("Cat", Info),
"Cat",
"Ws"),
Y_spec = ifelse(grepl("20", Info),
"Y",
"N"),
Year = ifelse(Scale == "Cat" & Y_spec == "Y",
stringr::str_sub(Info, -7, -4),
ifelse(Scale == "Ws" & Y_spec == "Y",
stringr::str_sub(Info, -6, -3),
NA
)),
Info2 = ifelse(is.na(Year),
stringr::str_remove(Info, scale),
stringr::str_remove(stringr::str_remove(Info, scale), Year))
) %>%
dplyr::filter(Scale %in% scale) %>%
dplyr::filter(Info2 %in% c("PctBl", "PctConif", "PctCrop", "PctDecid", "PctGrs",
"PctHay", "PctHbWet", "PctMxFst", "PctOw", "PctShrb",
"PctUrbHi", "PctUrbLo", "PctUrbMd", "PctUrbOp",
"PctWdWet")) %>%
##Remove columns we no longer need
dplyr::select(-Y_spec, -Info)
View(streamcat2 %>%
filter(SiteNumber == "NRS_ND-10008"))
streamcat <- read.csv("C:/Users/mikem/Documents/Research/USGS Stream Macros/MahonRumschlagPowell/streamcat-usgs-nawqa-join.csv")
streamcat
streamcat %>%
group_by(SiteNumber) %>%
summarize(count = n())
View(streamcat %>%
group_by(SiteNumber) %>%
summarize(count = n()))
streamcat <- read.csv("C:/Users/mikem/Documents/Research/USGS Stream Macros/MahonRumschlagPowell/streamcat_all.csv")
View(streamcat %>%
group_by(SiteNumber) %>%
summarize(count = n()))
streamcat <- read.csv("C:/Users/mikem/Documents/Research/USGS Stream Macros/MahonRumschlagPowell/streamcat_all.csv",
colClasses = c("SiteNumber" = "character"))
View(streamcat %>%
group_by(SiteNumber) %>%
summarize(count = n()))
View(streamcat %>%
group_by(SiteNumber) %>%
mutate(count = n())) %>%
filter(count > 1)
View(streamcat %>%
group_by(SiteNumber) %>%
mutate(count = n()) %>%
filter(count > 1))
streamcat
View(streamcat %>%
group_by(SiteNumber) %>%
slice(1))
streamcat <- streamcat %>%
group_by(SiteNumber) %>%
slice(1)
row.names = F)
streamcat
write.csv(streamcat,
"C:/Users/mikem/Documents/Research/USGS Stream Macros/MahonRumschlagPowell/streamcat_all.csv",
row.names = F)
devtools::document()
devtools::build()
install.packages( "C:/Users/mikem/Documents/R Package Builds/StreamData_0.0.0.9213.tar.gz", type = "source", repo = NULL)
library(StreamData)
detach("package:StreamData", unload = TRUE)
install.packages( "C:/Users/mikem/Documents/R Package Builds/StreamData_0.0.0.9213.tar.gz", type = "source", repo = NULL)
library(StreamData)
siteyr
NLCDdat <- getNLCDData(siteyr, scale = "Cat", group = T)
NLCDdat
View(NLCDdat)
dat = getInvertData(
dataType = "occur",
taxonLevel = "Genus",
taxonFix = "lump",
program = "ALL",
lifestage = FALSE,
rarefy = T,
NRSA = T,
sharedTaxa = T,
seed = 4292021
)
siteyr <- dat %>%
dplyr::select(SiteNumber, CollectionYear) %>%
group_by(SiteNumber, CollectionYear) %>%
slice(1) %>%
ungroup()
NLCDdat <- getNLCDData(siteyr, scale = "Cat", group = T)
View(NLCDdat)
getNLCDData <- function(data, scale = "Cat", group = FALSE){
}
getNLCDData <- function(data, scale = "Cat", group = FALSE){
##Read in NLCD data from streamcat dataset from Ryan Hill
streamcat <- read.csv(base::system.file("extdata",
"streamcat_all.csv",
package = "StreamData"))
##Naming scheme
#ItemYearScale
##Focus on only those that end in Cat (catchment) or Ws (watershed)
cat_ws_cols <- colnames(streamcat)[stringr::str_sub(colnames(streamcat), -3) == "Cat" |
stringr::str_sub(colnames(streamcat), -2) == "Ws"]
streamcat2 = streamcat %>%
##Select columns that are pertinent: site info, size of Ws/Cat, and above cols
dplyr::select(COMID, SiteNumber, CatAreaSqKm, WsAreaSqKm, all_of(cat_ws_cols)) %>%
##Pivot longer, so that non-site info columns are in "Info" and the values are
##in "value"; this will help with extraction of year and scale information
##In turn, this process will make it easier to join StreamCat data w/ biodata
tidyr::pivot_longer(cols = tidyselect::ends_with("Cat") |
tidyselect::ends_with("Ws") |
tidyselect::starts_with("Cat") |
tidyselect::starts_with("Ws"),
names_to = "Info"
) %>%
##Get info on whether it is for the Ws or Cat, whether the column has specific
##values for each year (NLCD);
##Extract what the data is (Info2): i.e. PctUrb, PctCrop, etc.
##From this, provide broad groupings for NLCD data:
## Urb, Crop, and Hay are HumanDominated; everything else is "Natural"
dplyr::mutate(Scale = ifelse(grepl("Cat", Info),
"Cat",
"Ws"),
Y_spec = ifelse(grepl("20", Info),
"Y",
"N"),
Year = ifelse(Scale == "Cat" & Y_spec == "Y",
stringr::str_sub(Info, -7, -4),
ifelse(Scale == "Ws" & Y_spec == "Y",
stringr::str_sub(Info, -6, -3),
NA
)),
Info2 = ifelse(is.na(Year),
stringr::str_remove(Info, scale),
stringr::str_remove(stringr::str_remove(Info, scale), Year))
) %>%
dplyr::filter(Scale %in% scale) %>%
dplyr::filter(Info2 %in% c("PctBl", "PctConif", "PctCrop", "PctDecid", "PctGrs",
"PctHay", "PctHbWet", "PctMxFst", "PctOw", "PctShrb",
"PctUrbHi", "PctUrbLo", "PctUrbMd", "PctUrbOp",
"PctWdWet")) %>%
##Remove columns we no longer need
dplyr::select(-Y_spec, -Info)
if(isTRUE(group)){
streamcat2 <- streamcat2 %>%
dplyr::mutate(Info2 = ifelse(grepl("PctUrb",
Info2),
"PctUrb",
ifelse(grepl(paste(c("PctDec","PctCon",
"PctMx"),
collapse = "|"),
Info2),
"PctFst",
ifelse(grepl(paste(c("PctGrs", "PctShrb",
"PctHay", "PctBl"),
collapse = "|"),
Info2),
"PctOpn",
ifelse(grepl(paste(c("PctOw", "PctWdWet",
"PctHbWet"),
collapse = "|"),
Info2),
"PctWater",
"PctCrop"))))
) %>%
dplyr::group_by(COMID, SiteNumber, Scale, Year, Info2) %>%
dplyr::summarize(value = sum(value),
count = n())
}
##Join Area of Ws and Cat with LULC data
USGS_streamcat <- streamcat2 %>%
tidyr::unite(InfoBroadScale, c("Info2", "Scale"), sep = "_", remove = T) %>%
tidyr::pivot_wider(id_cols = c("COMID", "SiteNumber", "Year"),
names_from = "InfoBroadScale",
values_from = "value") %>%
dplyr::mutate(Year = as.numeric(Year))
##Years are the NLCD years
Years = c(2001,2004,2006,2008,2011,2013,2016)
##Read in datasets
##Create a holder column to be used to match the datasets tmeporally
data$ClosestYear = 0
##Generate closest LULC year
for(i in 1:nrow(data)){
data$ClosestYear[i] = as.numeric(Years[which.min(abs(Years-data$CollectionYear[i]))])
}
##Join the datasets
data = data %>%
dplyr::left_join(USGS_streamcat,
by = c("SiteNumber" = "SiteNumber",
"ClosestYear" = "Year")) %>%
dplyr::select(-ClosestYear, -COMID)
return(data)
}
NLCDdat <- getNLCDData(siteyr, scale = "Cat", group = T)
}
devtools::document()
rm(list = c("getNLCDData"))
devtools::document()
devtools::build()
install.packages("C:/Users/mikem/Documents/R Package Builds/StreamData_0.0.0.9213.tar.gz", repo = NULL, type = "source")
library(StreamData)
detach("package:StreamData", unload = TRUE)
install.packages("C:/Users/mikem/Documents/R Package Builds/StreamData_0.0.0.9213.tar.gz", repo = NULL, type = "source")
library(StreamData)
siteyr
NLCDdat <- getNLCDData(siteyr, scale = "Cat", group = T)
USGS_streamcat
streamcat2
streamcat2 %>%
tidyr::unite(InfoBroadScale, c("Info2", "Scale"), sep = "_", remove = T) %>%
tidyr::pivot_wider(id_cols = c("COMID", "SiteNumber", "Year"),
names_from = "InfoBroadScale",
values_from = "value")
##Read in NLCD data from streamcat dataset from Ryan Hill
streamcat <- read.csv(base::system.file("extdata",
"streamcat_all.csv",
package = "StreamData"))
##Naming scheme
#ItemYearScale
##Focus on only those that end in Cat (catchment) or Ws (watershed)
cat_ws_cols <- colnames(streamcat)[stringr::str_sub(colnames(streamcat), -3) == "Cat" |
stringr::str_sub(colnames(streamcat), -2) == "Ws"]
streamcat2 = streamcat %>%
##Select columns that are pertinent: site info, size of Ws/Cat, and above cols
dplyr::select(COMID, SiteNumber, CatAreaSqKm, WsAreaSqKm, all_of(cat_ws_cols)) %>%
##Pivot longer, so that non-site info columns are in "Info" and the values are
##in "value"; this will help with extraction of year and scale information
##In turn, this process will make it easier to join StreamCat data w/ biodata
tidyr::pivot_longer(cols = tidyselect::ends_with("Cat") |
tidyselect::ends_with("Ws") |
tidyselect::starts_with("Cat") |
tidyselect::starts_with("Ws"),
names_to = "Info"
) %>%
##Get info on whether it is for the Ws or Cat, whether the column has specific
##values for each year (NLCD);
##Extract what the data is (Info2): i.e. PctUrb, PctCrop, etc.
##From this, provide broad groupings for NLCD data:
## Urb, Crop, and Hay are HumanDominated; everything else is "Natural"
dplyr::mutate(Scale = ifelse(grepl("Cat", Info),
"Cat",
"Ws"),
Y_spec = ifelse(grepl("20", Info),
"Y",
"N"),
Year = ifelse(Scale == "Cat" & Y_spec == "Y",
stringr::str_sub(Info, -7, -4),
ifelse(Scale == "Ws" & Y_spec == "Y",
stringr::str_sub(Info, -6, -3),
NA
)),
Info2 = ifelse(is.na(Year),
stringr::str_remove(Info, scale),
stringr::str_remove(stringr::str_remove(Info, scale), Year))
) %>%
dplyr::filter(Scale %in% scale) %>%
dplyr::filter(Info2 %in% c("PctBl", "PctConif", "PctCrop", "PctDecid", "PctGrs",
"PctHay", "PctHbWet", "PctMxFst", "PctOw", "PctShrb",
"PctUrbHi", "PctUrbLo", "PctUrbMd", "PctUrbOp",
"PctWdWet")) %>%
##Remove columns we no longer need
dplyr::select(-Y_spec, -Info)
streamcat2 <- streamcat2 %>%
dplyr::mutate(Info2 = ifelse(grepl("PctUrb",
Info2),
"PctUrb",
ifelse(grepl(paste(c("PctDec","PctCon",
"PctMx"),
collapse = "|"),
Info2),
"PctFst",
ifelse(grepl(paste(c("PctGrs", "PctShrb",
"PctHay", "PctBl"),
collapse = "|"),
Info2),
"PctOpn",
ifelse(grepl(paste(c("PctOw", "PctWdWet",
"PctHbWet"),
collapse = "|"),
Info2),
"PctWater",
"PctCrop"))))
) %>%
dplyr::group_by(COMID, SiteNumber, Scale, Year, Info2) %>%
dplyr::summarize(value = sum(value)) %>%
ungroup()
streamcat2 %>%
tidyr::unite(InfoBroadScale, c("Info2", "Scale"), sep = "_", remove = T) %>%
tidyr::pivot_wider(id_cols = c("COMID", "SiteNumber", "Year"),
names_from = "InfoBroadScale",
values_from = "value")
scale
streamcat2 %>%
tidyr::unite(InfoBroadScale, c("Info2", "Scale"), sep = "_", remove = T) %>%
tidyr::pivot_wider(id_cols = c("COMID", "SiteNumber", "Year"),
names_from = "InfoBroadScale",
values_from = "value") %>%
dplyr::mutate(Year = as.numeric(Year)) %>%
dplyr::mutate(across(contains(scale)), ifelse(. > 100,
100,
.))
streamcat2 %>%
tidyr::unite(InfoBroadScale, c("Info2", "Scale"), sep = "_", remove = T) %>%
tidyr::pivot_wider(id_cols = c("COMID", "SiteNumber", "Year"),
names_from = "InfoBroadScale",
values_from = "value") %>%
dplyr::mutate(Year = as.numeric(Year)) %>%
dplyr::mutate(across(contains(scale)), ifelse(.x > 100,
100,
.x))
streamcat2
streamcat2$value > 100
sum(streamcat2$value > 100)
sum(streamcat2$value > 100, na.rm = T)
streamcat2$value[(streamcat2$value > 100)]
streamcat2$value[(streamcat2$value > 100)]
treamcat2$value > 100
streamcat2$value > 100
streamcat2 <- streamcat2 %>%
dplyr::mutate(Info2 = ifelse(grepl("PctUrb",
Info2),
"PctUrb",
ifelse(grepl(paste(c("PctDec","PctCon",
"PctMx"),
collapse = "|"),
Info2),
"PctFst",
ifelse(grepl(paste(c("PctGrs", "PctShrb",
"PctHay", "PctBl"),
collapse = "|"),
Info2),
"PctOpn",
ifelse(grepl(paste(c("PctOw", "PctWdWet",
"PctHbWet"),
collapse = "|"),
Info2),
"PctWater",
"PctCrop"))))
) %>%
dplyr::group_by(COMID, SiteNumber, Scale, Year, Info2) %>%
dplyr::summarize(value = sum(value)) %>%
dplyr::ungroup() %>%
dplyr::mutate(value = ifelse(is.na(value),
value,
ifelse(value > 100,
100,
value)))
streamcat2
View(streamcat2)
streamcat2 = streamcat %>%
##Select columns that are pertinent: site info, size of Ws/Cat, and above cols
dplyr::select(COMID, SiteNumber, CatAreaSqKm, WsAreaSqKm, all_of(cat_ws_cols)) %>%
##Pivot longer, so that non-site info columns are in "Info" and the values are
##in "value"; this will help with extraction of year and scale information
##In turn, this process will make it easier to join StreamCat data w/ biodata
tidyr::pivot_longer(cols = tidyselect::ends_with("Cat") |
tidyselect::ends_with("Ws") |
tidyselect::starts_with("Cat") |
tidyselect::starts_with("Ws"),
names_to = "Info"
) %>%
##Get info on whether it is for the Ws or Cat, whether the column has specific
##values for each year (NLCD);
##Extract what the data is (Info2): i.e. PctUrb, PctCrop, etc.
##From this, provide broad groupings for NLCD data:
## Urb, Crop, and Hay are HumanDominated; everything else is "Natural"
dplyr::mutate(Scale = ifelse(grepl("Cat", Info),
"Cat",
"Ws"),
Y_spec = ifelse(grepl("20", Info),
"Y",
"N"),
Year = ifelse(Scale == "Cat" & Y_spec == "Y",
stringr::str_sub(Info, -7, -4),
ifelse(Scale == "Ws" & Y_spec == "Y",
stringr::str_sub(Info, -6, -3),
NA
)),
Info2 = ifelse(is.na(Year),
stringr::str_remove(Info, scale),
stringr::str_remove(stringr::str_remove(Info, scale), Year))
) %>%
dplyr::filter(Scale %in% scale) %>%
dplyr::filter(Info2 %in% c("PctBl", "PctConif", "PctCrop", "PctDecid", "PctGrs",
"PctHay", "PctHbWet", "PctMxFst", "PctOw", "PctShrb",
"PctUrbHi", "PctUrbLo", "PctUrbMd", "PctUrbOp",
"PctWdWet")) %>%
##Remove columns we no longer need
dplyr::select(-Y_spec, -Info)
streamcat2 %>%
dplyr::mutate(Info2 = ifelse(grepl("PctUrb",
Info2),
"PctUrb",
ifelse(grepl(paste(c("PctDec","PctCon",
"PctMx"),
collapse = "|"),
Info2),
"PctFst",
ifelse(grepl(paste(c("PctGrs", "PctShrb",
"PctHay", "PctBl"),
collapse = "|"),
Info2),
"PctOpn",
ifelse(grepl(paste(c("PctOw", "PctWdWet",
"PctHbWet"),
collapse = "|"),
Info2),
"PctWater",
"PctCrop"))))
) %>%
dplyr::group_by(COMID, SiteNumber, Scale, Year, Info2) %>%
dplyr::summarize(value = sum(value)) %>%
dplyr::ungroup()
NLCDdat
devtools::document()
